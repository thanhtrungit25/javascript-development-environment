{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 80fe8059aebcf27363a6","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./src/api/baseUrl.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_userApi","getUsers","then","result","usersBody","forEach","user","firstName","lastName","email","window","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","value","row","parentNode","removeChild","_interopRequireDefault","obj","__esModule","default","get","del","url","fetch","baseUrl","onSuccess","onError","request","Request","method","response","json","error","console","log","Object","defineProperty","_baseUrl","_baseUrl2","getBaseUrl","getQueryStringParameterByName","name","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","self","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","map","append","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","set","type","rejected","text","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","input","options","credentials","mode","referrer","form","trim","split","bytes","join","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","e","list","push","values","getAll","has","hasOwnProperty","callback","thisArg","keys","entries","clone","redirectStatuses","redirect","RangeError","init","responseURL","getResponseHeader","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _userApi = __webpack_require__(2);\n\t\n\t// Populate table of users via API call\n\t\n\t(0, _userApi.getUsers)().then(function (result) {\n\t  var usersBody = \"\";\n\t\n\t  result.forEach(function (user) {\n\t    usersBody += '<tr>\\n    <td><a href=\"#\" data-id=\"' + user.id + '\" class=\"deleteUser\">Delete</a></td>\\n    <td>' + user.id + '</td>\\n    <td>' + user.firstName + '</td>\\n    <td>' + user.lastName + '</td>\\n    <td>' + user.email + '</td>\\n    </tr>';\n\t  });\n\t  window.document.getElementById('users').innerHTML = usersBody;\n\t\n\t  var deleteLinks = window.document.getElementsByClassName('deleteUser');\n\t  // Must use array.from to create a real array from a DOM collection\n\t  // getElementsByClassName only returns an \"array like\" object\n\t  Array.from(deleteLinks, function (link) {\n\t    link.onclick = function (event) {\n\t      // eslint-disable-next-line no-console\n\t      var element = event.target;\n\t      event.preventDefault();\n\t      (0, _userApi.deleteUser)(element.attributes['data-id'].value);\n\t      var row = element.parentNode.parentNode;\n\t      row.parentNode.removeChild(row);\n\t    };\n\t  });\n\t});\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\tvar _baseUrl = __webpack_require__(3);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\t__webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\tfunction getUsers() {\n\t  return get('users');\n\t}\n\t\n\tfunction deleteUser(id) {\n\t  return del('users/' + id);\n\t}\n\t\n\tfunction get(url) {\n\t  return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\tfunction del(url) {\n\t  var request = new Request(baseUrl + url, {\n\t    method: 'DELETE'\n\t  });\n\t  return fetch(request).then(onSuccess, onError);\n\t}\n\t\n\tfunction onSuccess(response) {\n\t  return response.json();\n\t}\n\t\n\tfunction onError(error) {\n\t  console.log(error); // eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getBaseUrl;\n\tfunction getBaseUrl() {\n\t  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t  if (!url) url = window.location.href;\n\t  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t      results = regex.exec(url);\n\t  if (!results) return null;\n\t  if (!results[2]) return '';\n\t  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 80fe8059aebcf27363a6\n **/","import {getUsers, deleteUser} from './api/userApi';\n\n// Populate table of users via API call\n\ngetUsers().then(result => {\n  let usersBody = \"\";\n\n  result.forEach(user => {\n    usersBody += `<tr>\n    <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\n    <td>${user.id}</td>\n    <td>${user.firstName}</td>\n    <td>${user.lastName}</td>\n    <td>${user.email}</td>\n    </tr>`\n  });\n  window.document.getElementById('users').innerHTML = usersBody;\n\n  const deleteLinks = window.document.getElementsByClassName('deleteUser');\n  // Must use array.from to create a real array from a DOM collection\n  // getElementsByClassName only returns an \"array like\" object\n  Array.from(deleteLinks, link => {\n    link.onclick = function(event) {\n      // eslint-disable-next-line no-console\n      const element = event.target;\n      event.preventDefault();\n      deleteUser(element.attributes['data-id'].value);\n      const row = element.parentNode.parentNode;\n      row.parentNode.removeChild(row);\n    }\n  })\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import getBaseUrl from './baseUrl';\nimport 'whatwg-fetch';\n\nconst baseUrl = getBaseUrl();\n\nexport function getUsers() {\n  return get('users');\n}\n\nexport function deleteUser(id) {\n  return del(`users/${id}`);\n}\n\nfunction get(url) {\n  return fetch(baseUrl + url).then(onSuccess, onError);\n}\n\nfunction del(url) {\n  const request = new Request(baseUrl + url, {\n    method: 'DELETE'\n  });\n  return fetch(request).then(onSuccess, onError);\n}\n\nfunction onSuccess(response) {\n  return response.json();\n}\n\nfunction onError(error) {\n  console.log(error); // eslint-disable-line no-console\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userApi.js\n **/","export default function getBaseUrl() {\n  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n}\n\nfunction getQueryStringParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}